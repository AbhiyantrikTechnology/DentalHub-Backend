# Generated by Django 2.0 on 2019-09-25 07:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import encounterapp.models.encounter
import encounterapp.models.history
import encounterapp.models.refer
import encounterapp.models.screeing


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('patientapp', '0001_initial'),
        ('addressapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.CharField(default=encounterapp.models.encounter.keygenerator, editable=False, max_length=200, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now=True)),
                ('encounter_type', models.CharField(choices=[('Checkup / Screening', 'Checkup / Screening'), ('Relief of pain', 'Relief of pain'), ('Continuation of treatment plan', 'Continuation of treatment plan'), ('Other Problem', 'Other Problem')], max_length=150, verbose_name='encounter type')),
                ('other_detail', models.CharField(default='', max_length=150)),
                ('updated_at', models.DateField(null=True)),
                ('created_at', models.DateField()),
                ('activity_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encounter_area', to='addressapp.Activity')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('geography', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encounter_geography', to='addressapp.Ward')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patientapp.Patient')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='update_encounter', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.CharField(default=encounterapp.models.history.keygenerator, editable=False, max_length=200, primary_key=True, serialize=False)),
                ('blood_disorder', models.BooleanField(default=False, verbose_name='bleeding problem')),
                ('diabetes', models.BooleanField(default=False)),
                ('liver_problem', models.BooleanField(default=False, verbose_name='liver problem')),
                ('rheumatic_fever', models.BooleanField(default=False, verbose_name='rheumatic fever')),
                ('seizuers_or_epilepsy', models.BooleanField(default=False, verbose_name='epilepsy or seizures')),
                ('hepatitis_b_or_c', models.BooleanField(default=False, verbose_name='hepatitis b or c')),
                ('hiv', models.BooleanField(default=False)),
                ('no_allergies', models.BooleanField(default=False)),
                ('allergies', models.CharField(default='', max_length=255)),
                ('other', models.CharField(default='', max_length=255)),
                ('no_underlying_medical_condition', models.BooleanField(default=False, verbose_name='no underlying medical condition')),
                ('not_taking_any_medications', models.BooleanField(default=False, verbose_name='not taking any medications')),
                ('medications', models.CharField(default='', max_length=255)),
                ('no_medications', models.BooleanField(default=False)),
                ('encounter_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='encounterapp.Encounter')),
            ],
        ),
        migrations.CreateModel(
            name='Refer',
            fields=[
                ('id', models.CharField(default=encounterapp.models.refer.keygenerator, editable=False, max_length=200, primary_key=True, serialize=False)),
                ('no_referal', models.BooleanField(default=False, verbose_name='no referal')),
                ('health_post', models.BooleanField(default=False, verbose_name='health post')),
                ('dentist', models.BooleanField(default=False)),
                ('general_physician', models.BooleanField(default=False, verbose_name='general physician')),
                ('hygienist', models.BooleanField(default=False)),
                ('other', models.CharField(default='', max_length=255)),
                ('encounter_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='referral', to='encounterapp.Encounter')),
            ],
        ),
        migrations.CreateModel(
            name='Screeing',
            fields=[
                ('id', models.CharField(default=encounterapp.models.screeing.keygenerator, editable=False, max_length=200, primary_key=True, serialize=False)),
                ('carries_risk', models.CharField(choices=[('Low', 'Low'), ('High', 'High'), ('Medium', 'Medium')], max_length=30, verbose_name='caries risk')),
                ('decayed_primary_teeth', models.PositiveIntegerField(verbose_name='decayed primary teeth')),
                ('decayed_permanent_teeth', models.PositiveIntegerField(verbose_name='decayed permanent teeth')),
                ('cavity_permanent_posterior_teeth', models.BooleanField(default=False, verbose_name='cavity permanent posterior teeth')),
                ('cavity_permanent_anterior_teeth', models.BooleanField(default=False, verbose_name='cavity permanent anterior teeth')),
                ('need_sealant', models.BooleanField(default=False, verbose_name='need sealant')),
                ('reversible_pulpitis', models.BooleanField(default=False, verbose_name='mouth pain due to reversible pulpitis')),
                ('need_art_filling', models.BooleanField(default=False, verbose_name='Atraumatic restorative treatment')),
                ('need_extraction', models.BooleanField(default=False, verbose_name='need extraction')),
                ('need_sdf', models.BooleanField(default=False, verbose_name='need sdf')),
                ('active_infection', models.BooleanField(default=False)),
                ('high_blood_pressure', models.BooleanField(default=False)),
                ('low_blood_pressure', models.BooleanField(default=False)),
                ('thyroid_disorder', models.BooleanField(default=False)),
                ('encounter_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='screening', to='encounterapp.Encounter')),
            ],
        ),
    ]
